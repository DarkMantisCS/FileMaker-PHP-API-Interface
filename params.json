{"name":"Filemaker-php-api-interface","tagline":"This was just a private class that I made which helped me develop for the web using the FM PHP API but I have added my own methods which saved time and made life easier.","body":"### Welcome to the Filemaker PHP API Interface Repository\r\nThis page makes it easy to download and install the Filemaker PHP API Interface. All you have to do is follow the steps below. If you have any issues, please feel free to contact me (darkmantis[at]cybershade[dot]org).\r\n\r\n```\r\n$ cd your_project/\r\n$ git clone https://github.com/DarkMantisCS/FileMaker-PHP-API-Interface.git\r\n```\r\n\r\nThen you just need to go into the cloned folder and change the details in the config/config.php to hold your personal details.\r\n\r\n\r\n### [FileMaker PHP API (FileMaker API for PHP) Interface]\r\n\r\n**Note:**\r\nI would love to know what you all think of this project.\r\nPlease drop me an email: darkmantis[at]cybershade[dot]org or PM me on GitHub.\r\nI am also on Skype: dark-mantis1\r\n\r\nThanks!\r\n\r\n\r\n**Written by RichardC**\r\n\r\nThe FileMaker API for PHP Interface written by RichardC is an easier way for you to write applications from the FileMaker API for PHP.\r\nAll you will have to do is download the files, configure the config file and require the class in where ever you want to query the FileMaker Database.\r\n\r\nThis Interface was based on FileMaker 11 not FileMaker 12, I have not tested it with FM12 so use at your own risk.\r\n\r\n## Dependencies\r\n- FileMaker API for PHP (Included in this project)  \r\n    _Can also be downloaded here: http://fmdl.filemaker.com/MISC/PHPAPI/win/FM_API_for_PHP_Standalone.zip)_\r\n- FileMaker Server (To get the FileMaker PHP API)\r\n- PHP 5.3+ (Recommended)\r\n- cURL enabled\r\n\r\n\r\n## Versioning\r\nReleases will be numbered with the following format:\r\n`<major>.<minor>.<patch>` \r\nFor example: `1.4.6`\r\n\r\n##[Class] FMDB\r\n\r\n###[Functions]\r\nPlease note that all functions get automatically sanitized using my fm_escape_string() function.\r\n\r\n1. **[Public Static] isError( $request_object )** - Checks whether a given object returns an error, if it does it will tell you which error otherwise it will return 0  \r\n    Example:   \r\n    \r\n        if( FMDB::isError( $request_object ) != 401 ){\r\n            echo 'Records were found!';\r\n        }\r\n        \r\n2. **[Public] select( $layout, $arrFields )** - Gets a list of fields and values from a given layout. It will return an array.  \r\n    Example:  \r\n    \r\n        $select = $fmdb->select( 'Layout', array(\r\n            'fieldName'     =>  'valueToSearch',\r\n            'fieldName2'    =>  'valueToSearch'\r\n        )); \r\n        \r\n        if( is_array( $select ) ){\r\n            foreach( $select as $result ){\r\n                echo $result['fieldName'];\r\n            }\r\n        }\r\n        \r\n3. **[Public] setFields( $arrFields )** - This function will set fields from the previously used object (normally from the last $fmdb->select() function). Returns boolean  \r\n    Example:\r\n    \r\n        $select = $fmdb->select( 'Layout', array(\r\n            'fieldName'     =>  'valueToSearch',\r\n            'fieldName2'    =>  'valueToSearch'\r\n        )); \r\n        \r\n        if( $select ){  \r\n            $set = $fmdb->setFields( array(\r\n                'FieldName'  => 'ValueOne'\r\n            ));\r\n            \r\n            if( $set == true ){\r\n                echo 'Updated!';\r\n            }\r\n        }\r\n    \r\n4. **[Public] updateRecordByID( $layout, $arrFields, $iRecordID )** - Updates a record by using it's ID which you can get by using the select function and then using the 'rec_id' field. Returns Boolean  \r\n    Example:\r\n    \r\n        $updateRec = $fmdb->updateRecordByID( 'Layout', array(\r\n            'Field' =>  'Value'\r\n        ), 123);\r\n        \r\n5. **[Public] insert( $layout, $arrFields )** - Inserts a new record into the table (layout)  \r\n    Example:\r\n    \r\n        $insert = $fmdb->insert( 'Layout', array(\r\n            'MyField' => 'MyValue'\r\n        ));\r\n        \r\n        if( FMDB::isError( $insert ) === 0 ){\r\n            return true;\r\n        }\r\n\r\n6. **[Public] get_layout_names()** - Returns all the layout names into an array  \r\n    Example:\r\n    \r\n        $layouts = $fmdb->get_layout_names();\r\n        foreach( $layouts as $layout ){\r\n            echo $layout;\r\n        }\r\n\r\n7. **[Public] find( $layout, $arrSearchCriteria )** - Alias of Select  \r\n    Example:\r\n    \r\n        $find = $fmdb->find( 'Layout', array(\r\n            'fieldName'     =>  'valueToSearch',\r\n            'fieldName2'    =>  'valueToSearch'\r\n        )); \r\n        \r\n        if( is_array( $find ) ){\r\n            foreach( $find as $result ){\r\n                echo $result['fieldName'];\r\n            }\r\n        }\r\n\r\n8. **[Public] runScript( $layout, $scriptName, $params = array() )** - Runs a script on the FileMaker server and returns true/false  \r\n    Example:\r\n    \r\n        $runScript = $fmdb->runScript( 'Layout', 'myScript', array( 'param1', 'param2' ) );\r\n        \r\n        if( $runScript == true ){\r\n            return true;\r\n        }\r\n        \r\n\r\n9. **[Public] getRecordId()** - Returns the record ID of the last object (this may be made redundant in the future)  \r\n    Example:\r\n        \r\n        $select = $fmdb->select( 'MyLayout', array(\r\n            'Field' =>  'value'\r\n        ));\r\n        \r\n        if( FMDB::isError( $select ) === 0 ){\r\n            return $fmdb->getRecordId();\r\n        }\r\n\r\n10. **[Public] fm_escape_string( $input )** - Escapes any unwanted characters in an input string  \r\n    Example:\r\n    \r\n        $myInputString = $fmdb->fm_escape_string( 'MyValueToInsert' );\r\n\r\n\r\n\r\n## License\r\n\r\nCopyright (c) 2011 Cysha Ltd\r\n\r\nThe FileMaker PHP API interface written by RichardC is licensed under the [GPLv3 license](http://www.gnu.org/licenses/gpl-3.0.html).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}